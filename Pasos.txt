
--creacion del usuario (sql developer)

create user c##portafolio identified by oracle;

grant connect, resource to c##portafolio;

alter user c##portafolio default tablespace  users quota unlimited  on users;


-- Migrar bd de django a la bd vacia oracle (manage.py makemigrations y manage.py migrate)


-- Insertar BD sobre esa sin la columna usuarios (ya importada de django)



CREATE TABLE contratos (
    id_contrat                  NUMBER(11) GENERATED by default on null as IDENTITY,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL,
    rut_person      		VARCHAR2(20) NOT NULL,
    phone_contrat   		NUMBER(10) NOT NULL,
    emision_contrat             DATE NOT NULL,
    fin_contrat                 DATE NOT NULL,
    estado       		NUMBER(1) NOT NULL
);

ALTER TABLE contratos ADD CONSTRAINT contratos_pk PRIMARY KEY ( id_contrat );

CREATE TABLE detall_compra (
    id_detall                    NUMBER(7) NOT NULL,
    proces_venta_id_proc_venta   NUMBER(9) NOT NULL,
    fecha_detall                 DATE NOT NULL,
    nom_producto                 VARCHAR2(15) NOT NULL,
    cost_producto                NUMBER(7) NOT NULL,
    iva_producto                 NUMBER(7) NOT NULL,
    total_compra                 NUMBER(7) NOT NULL
);

CREATE UNIQUE INDEX detall_compra__idx ON
    detall_compra (
        proces_venta_id_proc_venta
    ASC );

ALTER TABLE detall_compra ADD CONSTRAINT detall_compra_pk PRIMARY KEY ( id_detall );

CREATE TABLE direc_extran (
    vent_extran_id_vent_ex   VARCHAR2(10) NOT NULL,
    id_direc                 VARCHAR2(20) NOT NULL,
    pais                     VARCHAR2(20) NOT NULL,
    direc_cli                VARCHAR2(20) NOT NULL,
    num_calle                NUMBER(7),
    depto                    VARCHAR2(10),
    localidad                VARCHAR2(20) NOT NULL
);

ALTER TABLE direc_extran ADD CONSTRAINT direc_extran_pk PRIMARY KEY ( id_direc );

CREATE TABLE direc_local (
    id_direc                 VARCHAR2(20) NOT NULL,
    direc_cli                VARCHAR2(20) NOT NULL,
    num_calle                NUMBER(7),
    depto                    VARCHAR2(10),
    region                   VARCHAR2(20) NOT NULL,
    comuna                   VARCHAR2(20) NOT NULL,
    vent_local_id_vent_loc   VARCHAR2(10) NOT NULL
);

ALTER TABLE direc_local ADD CONSTRAINT direc_local_pk PRIMARY KEY ( id_direc );

CREATE TABLE pedido (
    id_ped                      NUMBER(11) GENERATED by default on null as IDENTITY,
    tipo                        VARCHAR2(200) NOT NULL,
    fecha                       DATE NOT NULL,
    descrip                     VARCHAR2(200) NOT NULL,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL,
    productos_id_prod           NUMBER(8) NULL,
    estado_admin		NUMBER(1) NOT NULL,
    estado_productor		NUMBER(1) NOT NULL
);

ALTER TABLE pedido ADD CONSTRAINT pedido_pk PRIMARY KEY ( id_ped );

CREATE TABLE proces_pedido (
    id_proc_pedido        NUMBER(11) GENERATED by default on null as IDENTITY,
    transporte_id_trans   NUMBER(7) NOT NULL,
    pedido_id_ped         NUMBER(8) NOT NULL,
    estado_proceso	  NUMBER(1) NOT NULL
);

ALTER TABLE proces_pedido ADD CONSTRAINT proces_pedido_pk PRIMARY KEY ( id_proc_pedido );

CREATE TABLE proces_venta (
    id_proc_venta                  NUMBER(9) NOT NULL,
    proces_pedido_id_proc_pedido   NUMBER(8) NOT NULL
);

ALTER TABLE proces_venta ADD CONSTRAINT proces_venta_pk PRIMARY KEY ( id_proc_venta );

CREATE TABLE productos (
    id_prod                     NUMBER(11) GENERATED by default on null as IDENTITY,
    nom_prod                    VARCHAR2(20) NOT NULL,
    precio_prod                 NUMBER(9) NOT NULL,
    desc_prod                   VARCHAR2(200) NOT NULL,
    stock_prod                  NUMBER(9) NOT NULL,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL
);

ALTER TABLE productos ADD CONSTRAINT productos_pk PRIMARY KEY ( id_prod );

CREATE TABLE report_merma (
    id_merma                    NUMBER(8) NOT NULL,
    fecha_merma                 DATE NOT NULL,
    descrip_merma               VARCHAR2(40) NOT NULL,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL
);

ALTER TABLE report_merma ADD CONSTRAINT report_merma_pk PRIMARY KEY ( id_merma );

CREATE TABLE report_venta (
    id_report_vent               NUMBER(8) NOT NULL,
    prod_venta                   VARCHAR2(20) NOT NULL,
    cant_venta                   NUMBER(8) NOT NULL,
    total_venta                  NUMBER(8) NOT NULL,
    proces_venta_id_proc_venta   NUMBER(9) NOT NULL
);

ALTER TABLE report_venta ADD CONSTRAINT report_venta_pk PRIMARY KEY ( id_report_vent );

CREATE TABLE reportes (
    id_report                   NUMBER(8) NOT NULL,
    fecha_report                DATE NOT NULL,
    tip_report                  VARCHAR2(15) NOT NULL,
    user_report                 VARCHAR2(15) NOT NULL,
    descrip_report              VARCHAR2(30) NOT NULL,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL
);

ALTER TABLE reportes ADD CONSTRAINT reportes_pk PRIMARY KEY ( id_report );

CREATE TABLE seguimiento (
    id_seguimiento                 NUMBER(11) GENERATED by default on null as IDENTITY,
    est_seguimiento                VARCHAR2(20) NOT NULL,
    pedido_id_ped                  NUMBER(8) NOT NULL,
    proces_pedido_id_proc_pedido   NUMBER(8) NOT NULL
);

ALTER TABLE seguimiento ADD CONSTRAINT seguimiento_pk PRIMARY KEY ( id_seguimiento );

CREATE TABLE transporte (
    id_trans                    NUMBER(11) GENERATED by default on null as IDENTITY,
    tip_transporte              VARCHAR2(15) NOT NULL,
    tamano_trans                NUMBER(8) NOT NULL,
    capacidad_trans             NUMBER(8) NOT NULL,
    refrigeracion_trans         VARCHAR2(10) NOT NULL,
    fecha_trans                 DATE NOT NULL,
    usuarios_usuarios_id_user   NUMBER(8) NOT NULL
);

ALTER TABLE transporte ADD CONSTRAINT transporte_pk PRIMARY KEY ( id_trans );

CREATE TABLE vent_extran (
    id_vent_ex                   VARCHAR2(10) NOT NULL,
    proces_venta_id_proc_venta   NUMBER(9) NOT NULL,
    nom_cli                      VARCHAR2(20) NOT NULL,
    ape_pat                      VARCHAR2(20) NOT NULL,
    ape_mat                      VARCHAR2(20) NOT NULL,
    email                        VARCHAR2(20) NOT NULL
);

ALTER TABLE vent_extran ADD CONSTRAINT vent_extran_pk PRIMARY KEY ( id_vent_ex );

CREATE TABLE vent_local (
    id_vent_loc                  VARCHAR2(10) NOT NULL,
    proces_venta_id_proc_venta   NUMBER(9) NOT NULL,
    nom_cli                      VARCHAR2(20) NOT NULL,
    ape_pat                      VARCHAR2(20) NOT NULL,
    ape_mat                      VARCHAR2(20) NOT NULL,
    email                        VARCHAR2(20) NOT NULL
);

ALTER TABLE vent_local ADD CONSTRAINT vent_local_pk PRIMARY KEY ( id_vent_loc );

ALTER TABLE contratos
    ADD CONSTRAINT contratos_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

ALTER TABLE detall_compra
    ADD CONSTRAINT detall_compra_proces_venta_fk FOREIGN KEY ( proces_venta_id_proc_venta )
        REFERENCES proces_venta ( id_proc_venta );

ALTER TABLE direc_extran
    ADD CONSTRAINT direc_extran_vent_extran_fk FOREIGN KEY ( vent_extran_id_vent_ex )
        REFERENCES vent_extran ( id_vent_ex );

ALTER TABLE direc_local
    ADD CONSTRAINT direc_local_vent_local_fk FOREIGN KEY ( vent_local_id_vent_loc )
        REFERENCES vent_local ( id_vent_loc );

ALTER TABLE pedido
    ADD CONSTRAINT pedido_productos_fk FOREIGN KEY ( productos_id_prod )
        REFERENCES productos ( id_prod );

ALTER TABLE pedido
    ADD CONSTRAINT pedido_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

ALTER TABLE proces_pedido
    ADD CONSTRAINT proces_pedido_pedido_fk FOREIGN KEY ( pedido_id_ped )
        REFERENCES pedido ( id_ped );

ALTER TABLE proces_pedido
    ADD CONSTRAINT proces_pedido_transporte_fk FOREIGN KEY ( transporte_id_trans )
        REFERENCES transporte ( id_trans );

ALTER TABLE proces_venta
    ADD CONSTRAINT proces_venta_proces_pedido_fk FOREIGN KEY ( proces_pedido_id_proc_pedido )
        REFERENCES proces_pedido ( id_proc_pedido );

ALTER TABLE productos
    ADD CONSTRAINT productos_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE report_merma
    ADD CONSTRAINT report_merma_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

ALTER TABLE report_venta
    ADD CONSTRAINT report_venta_proces_venta_fk FOREIGN KEY ( proces_venta_id_proc_venta )
        REFERENCES proces_venta ( id_proc_venta );

ALTER TABLE reportes
    ADD CONSTRAINT reportes_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

ALTER TABLE seguimiento
    ADD CONSTRAINT seguimiento_pedido_fk FOREIGN KEY ( pedido_id_ped )
        REFERENCES pedido ( id_ped );

ALTER TABLE seguimiento
    ADD CONSTRAINT seguimiento_proces_pedido_fk FOREIGN KEY ( proces_pedido_id_proc_pedido )
        REFERENCES proces_pedido ( id_proc_pedido );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE transporte
    ADD CONSTRAINT transporte_usuarios_usuarios_fk FOREIGN KEY ( usuarios_usuarios_id_user )
        REFERENCES usuarios_usuarios ( id_user );

ALTER TABLE vent_extran
    ADD CONSTRAINT vent_extran_proces_venta_fk FOREIGN KEY ( proces_venta_id_proc_venta )
        REFERENCES proces_venta ( id_proc_venta );

ALTER TABLE vent_local
    ADD CONSTRAINT vent_local_proces_venta_fk FOREIGN KEY ( proces_venta_id_proc_venta )
        REFERENCES proces_venta ( id_proc_venta );
