# Generated by Django 3.1.1 on 2020-09-11 19:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='usuarios',
            fields=[
                ('id_user', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Nombre de usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electronico')),
                ('first_name', models.CharField(max_length=100, verbose_name='Primer nombre')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellido')),
                ('direccion', models.CharField(max_length=50, verbose_name='Direccion')),
                ('is_active', models.BooleanField(default=True, verbose_name='Esta activo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Es administrador')),
                ('tipo_usuario', models.CharField(choices=[('productor', 'Productor'), ('interno', 'Interno'), ('externo', 'Externo'), ('consultor', 'Consultor'), ('transportista', 'Transportista')], default='consultor', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
